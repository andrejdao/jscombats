{"version":3,"sources":["items/logo.svg","items/empty.svg","items/shield.svg","items/sword.svg","items/amulet.svg","items/head.svg","items/ring.svg","items/armor.svg","items/belt.svg","items/boots.svg","items/gauntlet.svg","Hero.js","CheckBox.js","ControlBox.js","Game.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Hero","maxHP","this","props","stats","value","hpBoxStyle","backgroundColor","width","HP","height","react_default","a","createElement","className","items","map","item","index","zip","key","concat","src","alt","name","style","text","Component","CheckBox","_this","type","checked","curIndex","onChange","onControlClick","attackControlsList","defenceControlsList","ControlBox","buttonText","gamePhase","attackIndex","defenceIndex","_this2","src_CheckBox_0","onAttackControlClick","onDefenceControlClick","disabled","onClick","goButtonClick","heroItems","shield","sword","empty","enemyItems","amulet","head","ring","armor","belt","boots","gauntlet","heroStats","Math","round","random","enemyStats","bodyParts","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","heroAttackControlIndex","heroDefenceControlIndex","newHeroHP","state","heroHP","newEnemyHP","enemyHP","damageToHero","damageToEnemy","enemyAttackBox","enemyDefenceBox","currentLogs","heroCrit","enemyCrit","heroDodge","enemyDodge","goButtonDisabled","gameLogs","src_Hero_0","src_ControlBox_0","Boolean","window","location","hostname","match","ReactDOM","render","src_Game_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40482028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.38b363f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield.9c914fd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sword.63f6659e.svg\";","module.exports = __webpack_public_path__ + \"static/media/amulet.fa18ee98.svg\";","module.exports = __webpack_public_path__ + \"static/media/head.381fe8d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.a059379e.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor.817e50b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/belt.3f39d738.svg\";","module.exports = __webpack_public_path__ + \"static/media/boots.01de6148.svg\";","module.exports = __webpack_public_path__ + \"static/media/gauntlet.5ef3a6f1.svg\";","import React, { Component } from 'react';\nimport './Hero.css';\n\nclass Hero extends Component {\n    render() {\n        const maxHP = this.props.stats[0].value*10;\n        const hpBoxStyle = {\n            backgroundColor: \"green\",\n            width: this.props.HP/maxHP*152,\n            height: 22,\n        }\n\n        return (\n            <div>\n                <div className=\"hero__container\">\n                    {this.props.items.map((item, index) =>\n                        <img className={item.zip} key={`hero-items-${index}`} src={item.src} alt={item.name}/>\n                    )}\n                </div>\n                <div className=\"hero__hp-bar\">HP: {this.props.HP}/{maxHP}</div>\n                <div style={hpBoxStyle}></div>\n                <div className=\"hero__stats-container\">\n                    {this.props.stats.map((item, index) =>\n                        <div key={`hero-stats-${index}`}> {`${item.text}:${item.value}`}\n                        </div>\n\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Hero;","import React, { Component } from 'react';\nimport './CheckBox.css';\n\nclass CheckBox extends Component {\n    render() {\n        return (\n            <div className='control-container'>{this.props.text.map((text, index) => <label\n                    key={`input-${index}`}>\n                    <input\n                        type=\"checkbox\"\n                        checked={index === this.props.curIndex}\n                        onChange={() => this.props.onControlClick(index)}\n                    />\n                    {text}\n                </label>\n            )}</div>\n        )\n    }\n}\n\nexport default CheckBox;","import React, { Component } from 'react';\nimport CheckBox from './CheckBox.js';\nimport './ControlBox.css';\n\nconst attackControlsList = [\"Attack head\",\"Attack chest\",\"Attack stomach\",\"Attack crotch\",\"Attack legs\"];\nconst defenceControlsList = [\"Defend head, chest and stomach\",\"Defend chest,stomach and crotch\",\"Defend stomach,crotch and legs\",\"Defend crotch, legs and head\",\"Defend legs, head and chest\"];\n\nclass ControlBox extends Component {\n    buttonText = () => {\n        if (this.props.gamePhase===\"end\") {return(\"The End\");} else {\n        if (this.props.attackIndex===null || this.props.defenceIndex===null) {return(\"Choose\");}\n        else {return(\"GO!!!\");}}\n};\n\n    render() {\n        return (\n                <div className=\"control-box__button\">\n                    <div className=\"control-box\">\n                        <CheckBox curIndex={this.props.attackIndex} text={attackControlsList} onControlClick={this.props.onAttackControlClick}/>\n                        <CheckBox curIndex={this.props.defenceIndex} text={defenceControlsList} onControlClick={this.props.onDefenceControlClick}/>\n                    </div>\n                    <button\n                        key=\"go-button\"\n                        disabled={this.props.attackIndex===null || this.props.defenceIndex===null || this.props.gamePhase===\"end\"}\n                        onClick={() => this.props.goButtonClick()}\n                    >\n                        {this.buttonText()}\n                    </button>\n                </div>\n        );\n    }\n}\n\nexport default ControlBox;","import React, { Component } from 'react';\nimport './Game.css';\nimport Hero from './Hero.js';\nimport ControlBox from './ControlBox.js';\nimport src from './items/logo.svg';\nimport empty from './items/empty.svg';\nimport amulet from './items/amulet.svg';\nimport head from './items/head.svg';\nimport ring from './items/ring.svg';\nimport shield from './items/shield.svg';\nimport armor from './items/armor.svg';\nimport sword from './items/sword.svg';\nimport belt from './items/belt.svg';\nimport boots from './items/boots.svg';\nimport gauntlet from './items/gauntlet.svg';\n\nconst heroItems = [\n    { name: \"Amulet\", zip: \"common\" , src},\n    { name: \"Head\", zip: \"common\"  , src},\n    { name: \"Ring\", zip: \"common\"  , src},\n    { name: \"LeftHand\", zip: \"common\"  , src: shield},\n    { name: \"Armor\", zip: \"common\"  , src},\n    { name: \"RightHand\", zip: \"relict\"  , src: sword},\n    { name: \"Belt\", zip: \"common\"  , src},\n    { name: \"Boots\", zip: \"common\"  , src},\n    { name: \"Gauntlels\", zip: \"common\"  , src},\n    { name: \"Item1\", zip: \"common\"  , src: empty},\n    { name: \"Item2\", zip: \"common\"  , src: empty},\n    { name: \"Item3\", zip: \"common\"  , src: empty},\n];\nconst enemyItems = [\n    { name: \"Amulet\", zip: \"common\" , src: amulet},\n    { name: \"Head\", zip: \"uncommon\"  , src: head},\n    { name: \"Ring\", zip: \"rare\"  , src: ring},\n    { name: \"LeftHand\", zip: \"heroic\"  , src: shield},\n    { name: \"Armor\", zip: \"uncommon\"  , src: armor},\n    { name: \"RightHand\", zip: \"epic\"  , src: sword},\n    { name: \"Belt\", zip: \"uncommon\"  , src: belt},\n    { name: \"Boots\", zip: \"uncommon\"  , src: boots},\n    { name: \"Gauntlels\", zip: \"legendary\"  , src: gauntlet},\n    { name: \"Item1\", zip: \"common\"  , src: empty},\n    { name: \"Item2\", zip: \"common\"  , src: empty},\n    { name: \"Item3\", zip: \"common\"  , src: empty},\n];\n\nconst heroStats = [\n    {text: \"Endurance\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Strength\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Dexterity\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Intuition\", value: Math.round(1 + Math.random() * 19)},\n];\n\nconst enemyStats = [\n    {text: \"Endurance\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Strength\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Dexterity\", value: Math.round(1 + Math.random() * 19)},\n    {text: \"Intuition\", value: Math.round(1 + Math.random() * 19)},\n];\n\nconst bodyParts = [\"head\",\"chest\",\"stomach\",\"crotch\",\"legs\"];\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            heroAttackControlIndex: null,\n            heroDefenceControlIndex: null,\n            goButtonDisabled: true,\n            heroHP: heroStats[0].value*10,\n            enemyHP: enemyStats[0].value*10,\n            gameLogs: \"Game Start!\",\n            gamePhase: \"start\"\n        };\n    }\n\n    onAttackControlClick = index => {\n        this.setState({heroAttackControlIndex:index});\n    };\n\n    onDefenceControlClick = index => {\n        this.setState({heroDefenceControlIndex:index});\n    };\n\n    goButtonClick = () => {\n        let newHeroHP = this.state.heroHP;\n        let newEnemyHP = this.state.enemyHP;\n        let damageToHero = 0;\n        let damageToEnemy = 0;\n        let enemyAttackBox = Math.round(Math.random()*4);\n        let enemyDefenceBox = Math.round(Math.random()*4);\n        let currentLogs = \"\";\n        let heroCrit = false;\n        let enemyCrit = false;\n        let heroDodge = false;\n        let enemyDodge = false;\n\n        if (heroStats[3].value>Math.random()*100) {heroCrit=true;}\n        if (enemyStats[3].value>Math.random()*100) {enemyCrit=true;}\n        if (heroStats[2].value>Math.random()*100) {heroDodge=true;}\n        if (enemyStats[2].value>Math.random()*100) {enemyDodge=true;}\n\n        if ((enemyAttackBox-this.state.heroDefenceControlIndex+4)%5%4>1) {\n            if (heroDodge) {currentLogs += \"Enemy attacked \"+bodyParts[enemyAttackBox]+\" but you dodged it.\\n\";} else {\n            damageToHero = enemyStats[1].value;\n            if (enemyCrit) {\n            damageToHero*=2;\n            currentLogs += \"Enemy attacked \"+bodyParts[enemyAttackBox]+\" and dealt \"+damageToHero+\" damage. (Critical Hit!)\\n\";\n            } else {currentLogs += \"Enemy attacked \"+bodyParts[enemyAttackBox]+\" and dealt \"+damageToHero+\" damage.\\n\";}}\n        } else {\n            currentLogs += \"Enemy attacked \"+bodyParts[enemyAttackBox]+\" but you blocked it.\\n\";\n        }\n        newHeroHP -= damageToHero;\n        if (newHeroHP < 0) {newHeroHP = 0;}\n\n        if ((this.state.heroAttackControlIndex-enemyDefenceBox+4)%5%4>1) {\n            if (enemyDodge) {currentLogs += \"You attacked \"+bodyParts[this.state.heroAttackControlIndex]+\" but enemy dodged it.\\n\";} else {\n            damageToEnemy = heroStats[1].value;\n            if (heroCrit) {\n            damageToEnemy*=2;\n            currentLogs += \"You attacked \"+bodyParts[this.state.heroAttackControlIndex]+\" and dealt \"+damageToEnemy+\" damage. (Critical Hit!)\\n\";\n            } else {currentLogs += \"You attacked \"+bodyParts[this.state.heroAttackControlIndex]+\" and dealt \"+damageToEnemy+\" damage.\\n\";}}\n        } else {\n           currentLogs += \"You attacked \"+bodyParts[this.state.heroAttackControlIndex]+\" but enemy blocked it.\\n\";\n        }\n        newEnemyHP -= damageToEnemy;\n        if (newEnemyHP < 0) {newEnemyHP = 0;}\n\n        if (newHeroHP === 0 && newEnemyHP === 0) {currentLogs += \"You killed each other!\\n\"; this.setState({gamePhase:\"end\"});}\n        else {\n        if (newHeroHP === 0) {currentLogs += \"You Lose!\\n\"; this.setState({gamePhase:\"end\"});}\n        if (newEnemyHP === 0) {currentLogs += \"You Win!\\n\"; this.setState({gamePhase:\"end\"});}\n        }\n\n        this.setState({heroHP:newHeroHP});\n        this.setState({enemyHP:newEnemyHP});\n        this.setState({heroAttackControlIndex:null});\n        this.setState({heroDefenceControlIndex:null});\n        this.setState({goButtonDisabled: true});\n        this.setState({gameLogs: currentLogs});\n    };\n\n    render() {\n        return (\n            <div>\n            <div className=\"Game\">\n                <Hero\n                    items={heroItems}\n                    stats={heroStats}\n                    HP={this.state.heroHP}\n                />\n                <ControlBox\n                    attackIndex={this.state.heroAttackControlIndex}\n                    defenceIndex={this.state.heroDefenceControlIndex}\n                    gamePhase={this.state.gamePhase}\n                    onAttackControlClick={this.onAttackControlClick}\n                    onDefenceControlClick={this.onDefenceControlClick}\n                    goButtonClick={this.goButtonClick}\n                />\n                <Hero\n                    items={enemyItems}\n                    stats={enemyStats}\n                    HP={this.state.enemyHP}\n                />\n            </div>\n            <div className=\"Logs\">\n                {this.state.gameLogs}\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Game is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}